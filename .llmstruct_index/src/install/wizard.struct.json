{
  "module_id": "src.install.wizard",
  "path": "src/install/wizard.py",
  "category": "core",
  "module_doc": "",
  "functions": [
    {
      "name": "check_inquirer_version",
      "docstring": "Check if python-inquirer is installed and log its version.",
      "line_range": [
        18,
        33
      ],
      "parameters": [],
      "decorators": []
    },
    {
      "name": "create_dedicated_user",
      "docstring": "",
      "line_range": [
        44,
        56
      ],
      "parameters": [
        "username"
      ],
      "decorators": []
    },
    {
      "name": "set_directory_permissions",
      "docstring": "",
      "line_range": [
        58,
        61
      ],
      "parameters": [
        "username",
        "directories"
      ],
      "decorators": []
    },
    {
      "name": "create_virtualenv",
      "docstring": "",
      "line_range": [
        63,
        70
      ],
      "parameters": [
        "path"
      ],
      "decorators": []
    },
    {
      "name": "activate_virtualenv",
      "docstring": "",
      "line_range": [
        72,
        75
      ],
      "parameters": [
        "venv_path"
      ],
      "decorators": []
    },
    {
      "name": "get_file_hash",
      "docstring": "Compute SHA-256 hash of a file.",
      "line_range": [
        77,
        85
      ],
      "parameters": [
        "file_path"
      ],
      "decorators": []
    },
    {
      "name": "copy_files_to_installation_path",
      "docstring": "Copy files to destination, overwriting if contents differ.",
      "line_range": [
        87,
        119
      ],
      "parameters": [
        "source_files",
        "destination_path"
      ],
      "decorators": []
    },
    {
      "name": "get_server_list",
      "docstring": "Fetch server list using update_singbox.py -l.",
      "line_range": [
        121,
        152
      ],
      "parameters": [
        "url"
      ],
      "decorators": []
    },
    {
      "name": "get_server_list_with_exclusions",
      "docstring": "Fetch server list and mark exclusions.",
      "line_range": [
        154,
        165
      ],
      "parameters": [
        "url"
      ],
      "decorators": []
    },
    {
      "name": "parse_arguments",
      "docstring": "",
      "line_range": [
        167,
        174
      ],
      "parameters": [],
      "decorators": []
    },
    {
      "name": "validate_url",
      "docstring": "",
      "line_range": [
        176,
        185
      ],
      "parameters": [
        "url"
      ],
      "decorators": []
    },
    {
      "name": "ensure_install_path",
      "docstring": "",
      "line_range": [
        187,
        192
      ],
      "parameters": [
        "path"
      ],
      "decorators": []
    },
    {
      "name": "setup_systemd_service",
      "docstring": "",
      "line_range": [
        194,
        238
      ],
      "parameters": [
        "install_path",
        "timer_frequency",
        "service_verbosity",
        "install_link"
      ],
      "decorators": []
    },
    {
      "name": "run_installation_wizard",
      "docstring": "",
      "line_range": [
        240,
        403
      ],
      "parameters": [],
      "decorators": []
    },
    {
      "name": "render_choice",
      "docstring": "",
      "line_range": [
        37,
        42
      ],
      "parameters": [
        "self",
        "choice",
        "pointer"
      ],
      "decorators": []
    }
  ],
  "classes": [
    {
      "name": "CustomRender",
      "docstring": "Custom renderer to visually distinguish excluded servers.",
      "line_range": [
        35,
        42
      ],
      "methods": [
        {
          "name": "render_choice",
          "docstring": "",
          "line_range": [
            37,
            42
          ],
          "parameters": [
            "self",
            "choice",
            "pointer"
          ]
        }
      ],
      "bases": [
        "ConsoleRender"
      ]
    }
  ],
  "callgraph": {
    "check_inquirer_version": [
      "logging.warning",
      "print",
      "logging.error",
      "logging.info"
    ],
    "render_choice": [
      "load_exclusions"
    ],
    "create_dedicated_user": [
      "subprocess.run",
      "open",
      "print",
      "sudoers_file.write"
    ],
    "set_directory_permissions": [
      "subprocess.run",
      "print"
    ],
    "create_virtualenv": [
      "subprocess.run",
      "print"
    ],
    "activate_virtualenv": [
      "subprocess.run"
    ],
    "get_file_hash": [
      "sha256.update",
      "open",
      "f.read",
      "sha256.hexdigest",
      "hashlib.sha256",
      "iter"
    ],
    "copy_files_to_installation_path": [
      "get_file_hash",
      "shutil.copytree",
      "shutil.copy",
      "os.makedirs",
      "print",
      "os.walk"
    ],
    "get_server_list": [
      "logging.warning",
      "logging.error",
      "logging.info",
      "subprocess.run",
      "re.sub",
      "seen_names.add",
      "print",
      "server_list.append",
      "line.split",
      "len",
      "set"
    ],
    "get_server_list_with_exclusions": [
      "load_exclusions",
      "get_server_list",
      "check_inquirer_version"
    ],
    "parse_arguments": [
      "range",
      "parser.parse_args",
      "argparse.ArgumentParser",
      "parser.add_argument"
    ],
    "validate_url": [
      "re.match",
      "re.compile"
    ],
    "ensure_install_path": [
      "print",
      "os.makedirs"
    ],
    "setup_systemd_service": [
      "open",
      "subprocess.run",
      "print",
      "timer_file.write",
      "service_file.write"
    ],
    "run_installation_wizard": [
      "re.sub",
      "print",
      "logging.error",
      "create_virtualenv",
      "subprocess.run",
      "setup_systemd_service",
      "activate_virtualenv",
      "copy_files_to_installation_path",
      "all_servers.index",
      "logging.info",
      "inquirer.List",
      "inquirer.prompt",
      "parse_arguments",
      "map",
      "inquirer.Checkbox",
      "selected_indices.append",
      "view_exclusions",
      "CustomRender",
      "get_server_list",
      "get_server_list_with_exclusions",
      "ensure_install_path",
      "inquirer.Text",
      "validate_url"
    ]
  },
  "dependencies": [
    "ConsoleRender",
    "argparse",
    "hashlib",
    "importlib.metadata",
    "inquirer",
    "inquirer.render.console",
    "load_exclusions",
    "logging",
    "os",
    "re",
    "shutil",
    "singbox.server.exclusions",
    "subprocess",
    "sys",
    "view_exclusions"
  ],
  "hash": "098509c9a1c88e5f8bdcfd46f0d420327984d912c745192534a568d5ee1f46cc",
  "artifact_id": "5cdaa28f-d122-4a6c-ba0a-3f904ca12917"
}