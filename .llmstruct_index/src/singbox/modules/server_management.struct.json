{
  "module_id": "src.singbox.modules.server_management",
  "path": "src/singbox/modules/server_management.py",
  "category": "core",
  "module_doc": "",
  "functions": [
    {
      "name": "list_servers",
      "docstring": "List all supported outbounds with indices and details.",
      "line_range": [
        12,
        31
      ],
      "parameters": [
        "json_data",
        "supported_protocols",
        "debug_level"
      ],
      "decorators": []
    },
    {
      "name": "generate_server_id",
      "docstring": "Generate a unique ID for a server based on tag, protocol, and port.",
      "line_range": [
        33,
        36
      ],
      "parameters": [
        "server"
      ],
      "decorators": []
    },
    {
      "name": "handle_temp_file",
      "docstring": "Handle temporary file creation and validation.",
      "line_range": [
        38,
        46
      ],
      "parameters": [
        "content",
        "target_path",
        "validate_fn"
      ],
      "decorators": []
    },
    {
      "name": "load_exclusions",
      "docstring": "Load exclusions from the exclusion file.",
      "line_range": [
        48,
        53
      ],
      "parameters": [],
      "decorators": []
    },
    {
      "name": "save_exclusions",
      "docstring": "Save exclusions to the exclusion file.",
      "line_range": [
        55,
        58
      ],
      "parameters": [
        "exclusions"
      ],
      "decorators": []
    },
    {
      "name": "load_selected_config",
      "docstring": "Load selected configuration from file.",
      "line_range": [
        60,
        65
      ],
      "parameters": [],
      "decorators": []
    },
    {
      "name": "save_selected_config",
      "docstring": "Save selected configuration to file.",
      "line_range": [
        67,
        70
      ],
      "parameters": [
        "selected"
      ],
      "decorators": []
    },
    {
      "name": "apply_exclusions",
      "docstring": "Apply exclusions to the list of server configurations.",
      "line_range": [
        72,
        82
      ],
      "parameters": [
        "configs",
        "excluded_ids",
        "debug_level"
      ],
      "decorators": []
    },
    {
      "name": "exclude_servers",
      "docstring": "Exclude servers by index or name, supporting wildcards.",
      "line_range": [
        84,
        113
      ],
      "parameters": [
        "json_data",
        "exclude_list",
        "supported_protocols",
        "debug_level"
      ],
      "decorators": []
    },
    {
      "name": "remove_exclusions",
      "docstring": "Remove exclusions by index or name.",
      "line_range": [
        115,
        136
      ],
      "parameters": [
        "exclude_list",
        "json_data",
        "supported_protocols",
        "debug_level"
      ],
      "decorators": []
    },
    {
      "name": "view_exclusions",
      "docstring": "View current exclusions.",
      "line_range": [
        138,
        145
      ],
      "parameters": [
        "debug_level"
      ],
      "decorators": []
    },
    {
      "name": "clear_exclusions",
      "docstring": "Clear all current exclusions.",
      "line_range": [
        147,
        153
      ],
      "parameters": [],
      "decorators": []
    }
  ],
  "classes": [],
  "callgraph": {
    "list_servers": [
      "server.get",
      "print",
      "isinstance"
    ],
    "generate_server_id": [
      "server.get",
      "hashlib.sha256",
      "identifier.encode"
    ],
    "handle_temp_file": [
      "ValueError",
      "open",
      "json.dumps",
      "tempfile.gettempdir",
      "validate_fn",
      "f.write",
      "shutil.move"
    ],
    "load_exclusions": [
      "open",
      "json.load"
    ],
    "save_exclusions": [
      "handle_temp_file"
    ],
    "load_selected_config": [
      "open",
      "json.load"
    ],
    "save_selected_config": [
      "handle_temp_file"
    ],
    "apply_exclusions": [
      "config.get",
      "valid_configs.append",
      "print",
      "enumerate",
      "generate_server_id"
    ],
    "exclude_servers": [
      "save_exclusions",
      "fnmatch.fnmatch",
      "server.get",
      "json_data.get",
      "new_exclusions.append",
      "load_exclusions",
      "item.isdigit",
      "int",
      "len",
      "print",
      "enumerate",
      "generate_server_id"
    ],
    "remove_exclusions": [
      "save_exclusions",
      "server.get",
      "json_data.get",
      "item.startswith",
      "load_exclusions",
      "int",
      "len",
      "print",
      "enumerate",
      "generate_server_id"
    ],
    "view_exclusions": [
      "exclusion.get",
      "json.dumps",
      "print",
      "load_exclusions"
    ],
    "clear_exclusions": [
      "os.remove",
      "print"
    ]
  },
  "dependencies": [
    "datetime",
    "fnmatch",
    "hashlib",
    "json",
    "os",
    "shutil",
    "tempfile"
  ],
  "hash": "d7e108890502b467125b3e88c7a02c8d6bb6f1dfdb66f6a0e2b850d81a4cbb32",
  "artifact_id": "c5756b49-51eb-44ce-8293-fec6d77bb041"
}