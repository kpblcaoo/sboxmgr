import os

from sboxmgr.subscription.parsers.uri_list_parser import URIListParser


def test_uri_list_parser():
    example_path = os.path.join(
        os.path.dirname(__file__), "../src/sboxmgr/examples/example_uri_list.txt"
    )
    with open(example_path, "rb") as f:
        raw = f.read()
    parser = URIListParser()
    servers = parser.parse(raw)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä—Å—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ (ss, vless, vmess, unknown)
    assert isinstance(servers, list)
    assert any(s.type == "ss" for s in servers)
    assert any(s.type == "vless" for s in servers)
    assert any(s.type == "vmess" for s in servers)
    assert any(s.type == "unknown" for s in servers)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ emoji –∏ query-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–µ –ª–æ–º–∞—é—Ç –ø–∞—Ä—Å–µ—Ä
    vless = next((s for s in servers if s.type == "vless"), None)
    assert vless is not None
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä —Å emoji –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –≤ label/tag
    has_emoji_or_special = any(
        any(
            char in (s.meta.get("label", "") + s.meta.get("tag", ""))
            for char in ["üá≥üá±", "üôÄ", "emoji", "VLESS", "WS"]
        )
        for s in servers
    )
    assert (
        has_emoji_or_special
    ), "–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–µ—Ä–≤–µ—Ä —Å emoji –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—à–∏–±–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –≤ meta
    for s in servers:
        if s.address == "invalid":
            assert "error" in s.meta
