# Pre-commit hooks configuration for SBoxMgr
# Best practices for Python code quality and security

repos:
#  - repo: https://github.com/Yelp/detect-secrets
#    rev: v1.5.0
#    hooks:
#      - id: detect-secrets
#        args:
#          - "--baseline"
#          - ".secrets.baseline"
#          - "--exclude-files"
#          - "^\\.secrets\\.baseline$"

  # 1. RUFF - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        types: [python]
      - id: ruff-format
        types: [python]

  # 2. BLACK - Code formatter (backup to ruff-format)
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  # 3. ISORT - Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # 4. MYPY - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--ignore-missing-imports, --show-error-codes]
        exclude: ^tests/

  # 5. BANDIT - Security linting
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/, -f, json, -o, bandit-report.json]
        exclude: ^tests/

  # 6. VULTURE - Dead code detection
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.10
    hooks:
      - id: vulture
        args: [src/, --min-confidence, "80"]
        exclude: ^tests/

  # 7. RADON - Code complexity analysis
  - repo: https://github.com/rubik/radon
    rev: 5.1.0
    hooks:
      - id: radon-cc
        args: [src/, -a, -s]

  # 8. PYTEST - Unit tests
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [tests/, -v, --tb=short]

  # 9. TRAILING WHITESPACE - Basic cleanup
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: check-toml
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer

  # 10. GIT LINT - Commit message validation
  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v9.5.0
    hooks:
      - id: commitlint
        stages: [commit-msg]
        args: [--config, .commitlintrc.json]

# Global settings
default_language_version:
  python: python3.12

# Hook execution order
fail_fast: false
