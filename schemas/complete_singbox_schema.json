{
  "inbounds": {
    "trojan": {},
    "redirect": {},
    "shadowtls": {
      "Value": {
        "type": "Protocol Version",
        "required": false,
        "description": "---------------"
      },
      "[ShadowTLS v2](https://github.com/ihciah/shadow-tls/blob/master/docs/protocol-en.md#v2)": {
        "type": "",
        "required": false,
        "description": "[ShadowTLS v3](https://github.com/ihciah/shadow-tls/blob/master/docs/protocol-v3-en.md)"
      }
    },
    "shadowsocks": {
      "Method": {
        "type": "Key Length",
        "required": false,
        "description": "-------------------------------"
      },
      "32": {
        "type": "",
        "required": false,
        "description": "32"
      },
      "none": {
        "type": "/",
        "required": false,
        "description": "aes-128-gcm"
      },
      "/": {
        "type": "",
        "required": false,
        "description": "`sing-box generate rand --base64 <Key Length>`"
      },
      "xchacha20-ietf-poly1305": {
        "type": "/",
        "required": false,
        "description": "Method"
      },
      "method": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "password": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "users": {
        "type": "list",
        "required": false,
        "description": "Found in example: list"
      },
      "multiplex": {
        "type": "dict",
        "required": false,
        "description": "Found in example: dict"
      },
      "type": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "destinations": {
        "type": "list",
        "required": false,
        "description": "Found in example: list"
      }
    },
    "hysteria": {},
    "vmess": {
      "Alter ID": {
        "type": "Description",
        "required": false,
        "description": "----------"
      }
    },
    "socks": {},
    "mixed": {},
    "direct": {},
    "tuic": {},
    "naive": {},
    "anytls": {},
    "vless": {},
    "tproxy": {},
    "http": {},
    "tun": {
      "Stack": {
        "type": "Description",
        "required": false,
        "description": "----------"
      },
      "Perform L3 to L4 translation using [gVisor](https://github.com/google/gvisor)'s virtual network stack": {
        "type": "",
        "required": false,
        "description": "Mixed `system` TCP stack and `gvisor` UDP stack"
      },
      "Common user": {
        "type": "ID",
        "required": false,
        "description": "--------------"
      }
    },
    "hysteria2": {
      "Scheme": {
        "type": "Example",
        "required": false,
        "description": ""
      },
      "-------------------------": {
        "type": "--------------------",
        "required": false,
        "description": "`file`"
      },
      "As a file server": {
        "type": "`directory`",
        "required": false,
        "description": "`proxy`"
      },
      "Conflict with `masquerade.type`.\n\nA 404 page will be returned if masquerade is not configured.\n\n#### masquerade.type\n\nHTTP3 server behavior (Object configuration) when authentication fails.": {
        "type": "Type",
        "required": false,
        "description": "Fields"
      },
      "----------": {
        "type": "-----------------------------",
        "required": false,
        "description": ""
      },
      "`url`, `rewrite_host`": {
        "type": "",
        "required": false,
        "description": "Reply with a fixed response"
      }
    }
  },
  "outbounds": {
    "trojan": {},
    "wireguard": {},
    "shadowtls": {
      "Value": {
        "type": "Protocol Version",
        "required": false,
        "description": "---------------"
      },
      "[ShadowTLS v2](https://github.com/ihciah/shadow-tls/blob/master/docs/protocol-en.md#v2)": {
        "type": "",
        "required": false,
        "description": "[ShadowTLS v3](https://github.com/ihciah/shadow-tls/blob/master/docs/protocol-v3-en.md)"
      }
    },
    "dns": {
      "type": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "tag": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      }
    },
    "shadowsocks": {},
    "hysteria": {},
    "vmess": {
      "Alter ID": {
        "type": "Description",
        "required": false,
        "description": "----------"
      },
      "Use legacy protocol": {
        "type": "",
        "required": false,
        "description": "Unused, same as 1"
      },
      "Encoding": {
        "type": "Description",
        "required": false,
        "description": "------------"
      },
      "Supported by v2ray 5+": {
        "type": "",
        "required": false,
        "description": "Supported by xray"
      }
    },
    "socks": {},
    "selector": {
      "type": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "tag": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "outbounds": {
        "type": "list",
        "required": false,
        "description": "Found in example: list"
      },
      "default": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "interrupt_exist_connections": {
        "type": "bool",
        "required": false,
        "description": "Found in example: bool"
      }
    },
    "direct": {},
    "tuic": {
      "Mode": {
        "type": "Description",
        "required": false,
        "description": ":-------"
      }
    },
    "anytls": {},
    "ssh": {},
    "tor": {},
    "vless": {
      "Encoding": {
        "type": "Description",
        "required": false,
        "description": "------------"
      },
      "Supported by v2ray 5+": {
        "type": "",
        "required": false,
        "description": "Supported by xray"
      }
    },
    "http": {},
    "block": {
      "type": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "tag": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      }
    },
    "urltest": {
      "type": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "tag": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "outbounds": {
        "type": "list",
        "required": false,
        "description": "Found in example: list"
      },
      "url": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "interval": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "tolerance": {
        "type": "int",
        "required": false,
        "description": "Found in example: int"
      },
      "idle_timeout": {
        "type": "str",
        "required": false,
        "description": "Found in example: str"
      },
      "interrupt_exist_connections": {
        "type": "bool",
        "required": false,
        "description": "Found in example: bool"
      }
    },
    "hysteria2": {}
  },
  "summary": {
    "total_inbounds": 17,
    "total_outbounds": 19,
    "protocols_analyzed": [
      "outbound:trojan",
      "outbound:wireguard",
      "outbound:shadowtls",
      "outbound:dns",
      "outbound:shadowsocks",
      "outbound:hysteria",
      "outbound:vmess",
      "outbound:socks",
      "outbound:selector",
      "outbound:direct",
      "outbound:tuic",
      "outbound:anytls",
      "outbound:ssh",
      "outbound:tor",
      "outbound:vless",
      "outbound:http",
      "outbound:block",
      "outbound:urltest",
      "outbound:hysteria2",
      "inbound:trojan",
      "inbound:redirect",
      "inbound:shadowtls",
      "inbound:shadowsocks",
      "inbound:hysteria",
      "inbound:vmess",
      "inbound:socks",
      "inbound:mixed",
      "inbound:direct",
      "inbound:tuic",
      "inbound:naive",
      "inbound:anytls",
      "inbound:vless",
      "inbound:tproxy",
      "inbound:http",
      "inbound:tun",
      "inbound:hysteria2"
    ]
  }
}