[project]
name = "sboxmgr"
version = "0.1.0-pre"
description = "Sing-box config manager CLI (sboxctl)"
authors = [
    { name = "Mikhail Stepanov", email = "kpblcaoo@gmail.com" }
]
readme = "README.md"
license = { text = "AGPL-3.0" }
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: Proxy Servers",
    "Topic :: System :: Networking",
    "Topic :: Utilities",
]
keywords = [
    "sing-box",
    "proxy",
    "configuration",
    "cli",
    "tui",
    "subscription",
    "network",
    "vpn",
]
urls = { Homepage = "https://github.com/kpblcaoo/sboxmgr", Documentation = "https://github.com/kpblcaoo/sboxmgr/tree/main/docs", Repository = "https://github.com/kpblcaoo/sboxmgr.git", Issues = "https://github.com/kpblcaoo/sboxmgr/issues", Changelog = "https://github.com/kpblcaoo/sboxmgr/blob/main/CHANGELOG.md" }
dependencies = [
    "typer>=0.9.0",
    "requests>=2.28.0",
    "python-dotenv",
    "pydantic>=2.0",
    "pydantic-settings>=2.0",
    "packaging>=21.0",
    "toml>=0.10.2",
    "textual>=0.52.0",
    "PyYAML>=6.0",
]

[project.scripts]
sboxctl = "sboxmgr.cli.main:app"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-mock",
    "black",
    "pre-commit",
    "detect-secrets",
]
# ipc = [
#     "sbox-common @ file:///home/kpblc/projects/subbox/sbox-common",
# ]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9+
target-version = "py39"

[tool.ruff.lint]
# Enable all critical checks
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes (includes F401, F403, F404, F405, F406, F407)
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "B006",  # do not use mutable data structures for argument defaults
    "F403",  # wildcard imports (used for plugin registration)
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
